@Styles.Render("~/Content/datetimepickercss")
@model Sadad.Sadded.WebsiteExample.Models.InvoiceCreateModel
@{
    ViewBag.Title = "CreateInvoice";
}

<h2>Create Invoice</h2>
@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">

    <hr />
    @Html.Partial("~/Views/Shared/_configuration.cshtml", Model)
    <div class="form-group">
        @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control col-md-10", autocomplete = "off", @style = "max-width:unset !important;width: 91.5%;"} })
            @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control date-time-picker", autocomplete = "off" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
        </div>

        @Html.LabelFor(model => model.ExternalReference, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.ExternalReference, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NotificationMode, "Notification Mode", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            <select name="NotificationMode" id="NotificationMode" class="form-control" onchange="SetFields();">
                @foreach (string notificationMode in ViewBag.NotificationModes.Keys)
                {
                    if (Model != null && Model.NotificationMode == Convert.ToInt32(ViewBag.NotificationModes[notificationMode]))
                    {
                        <option selected value="@ViewBag.NotificationModes[notificationMode]">@notificationMode</option>
                    }
                    else
                    {
                        <option value="@ViewBag.NotificationModes[notificationMode]">@notificationMode</option>
                    }
                }
            </select>
        </div>
    </div>

    <div class="form-group">
        <div class="msisdn">
            @Html.LabelFor(model => model.Msisdn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Msisdn, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            </div>
        </div>

        <div class="email">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            </div>
        </div>
    </div>
    <div class="urls">
        <div class="form-group">
            @Html.LabelFor(model => model.SuccessUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.SuccessUrl, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            </div>

            @Html.LabelFor(model => model.ErrorUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.ErrorUrl, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-success" />
        </div>
    </div>
</div>
}

@if (Model != null && Model.Response != null)
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th colspan="2" style="background-color:#0078d4; color:white; text-align: center; border:solid 1px;"><b>Server Response</b></th>
            </tr>
        </thead>
        <tbody>
            @if (!string.IsNullOrEmpty(@Model.Response.TransactionReference))
            {
                <tr>
                    <td class="col-md-2" style="background-color:#0078d4; color:white;"><b>Transaction Reference</b></td>
                    <td class="col-md-10">@Model.Response.TransactionReference</td>
                </tr>
            }
            @if (!string.IsNullOrEmpty(Model.Response.PaymentUrl))
            {
                <tr>
                    <td class="col-md-2" style="background-color:#0078d4; color:white;"><b>Payment Url</b></td>
                    <td class="col-md-10"><a href="@Model.Response.PaymentUrl">@Model.Response.PaymentUrl</a></td>
                </tr>
            }
            <tr>
                <td class="col-md-2" style="background-color:#0078d4; color:white;"><b>Error Code</b></td>
                <td class="col-md-10">@Model.Response.ErrorCode</td>
            </tr>
            <tr>
                <td class="col-md-2" style="background-color:#0078d4; color:white;"><b>Error Message</b></td>
                <td class="col-md-10">@Model.Response.ErrorMessage</td>
            </tr>
            
        </tbody>
    </table>
}



@section Scripts{

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/datetime")
    @Scripts.Render("~/bundles/datetimepicker")

    <script type="text/javascript">
        $(document).ready(function () {
            SetFields();
            $('.date-time-picker').datetimepicker({
                ampm: true, // FOR AM/PM FORMAT
                format: 'Y/m/d g:i A',
                validateOnBlur: false
            });
        });

        function SetFields() {
            var selectedMode = $("#NotificationMode").children("option:selected").val();
            if (selectedMode == "100") {
                $(".msisdn").show();
                $(".email").hide();
                $(".urls").hide();
            }
            else if (selectedMode == "200") {
                $(".msisdn").hide();
                $(".email").show();
                $(".urls").hide();
            }
            else {
                $(".msisdn").show();
                $(".email").show();
                $(".urls").show();
            }
        }
    </script>

}